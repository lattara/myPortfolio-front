{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/button/button.component.ts","webpack:///src/app/components/button/button.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/title/title.component.ts","webpack:///src/app/components/title/title.component.html","webpack:///src/app/dashboard/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/dashboard/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/dashboard/admin-dashboard/dashboard-menu-items.ts","webpack:///src/app/dashboard/bio-dashboard/bio-dashboard.component.ts","webpack:///src/app/dashboard/bio-dashboard/bio-dashboard.component.html","webpack:///src/app/dashboard/misc-dashboard/misc-dashboard.component.ts","webpack:///src/app/dashboard/misc-dashboard/misc-dashboard.component.html","webpack:///src/app/dashboard/projects-dashboard/projects-dashboard.component.ts","webpack:///src/app/dashboard/projects-dashboard/projects-dashboard.component.html","webpack:///src/app/guards/auth-guard.guard.ts","webpack:///src/app/models/bio.model.ts","webpack:///src/app/models/experience.ts","webpack:///src/app/models/project.model.ts","webpack:///src/app/models/projectDataSource.ts","webpack:///src/app/pages/bio/bio.component.ts","webpack:///src/app/pages/bio/bio.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/landing/landing.component.ts","webpack:///src/app/pages/landing/landing.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/main/main.component.ts","webpack:///src/app/pages/main/main.component.html","webpack:///src/app/pages/projects/projects.component.ts","webpack:///src/app/pages/projects/projects.component.html","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/register/register.component.html","webpack:///src/app/pages/toolbox/toolbox.component.ts","webpack:///src/app/pages/toolbox/toolbox.component.html","webpack:///src/app/services/bio.service.ts","webpack:///src/app/services/contact.service.ts","webpack:///src/app/services/education.service.ts","webpack:///src/app/services/experience.service.ts","webpack:///src/app/services/git-hub.service.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/toolbox.service.ts","webpack:///src/app/services/toolboxItem.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ButtonComponent","icon","imageName","undefined","FooterComponent","TitleComponent","mode","text","AdminDashboardComponent","usersService","dashboardMenuItems","logout","caption","index","BioDashboardComponent","fb","http","bioService","filesToUpload","modifyBioForm","group","intro","cvLink","control","profileImgLink","event","target","files","length","push","get","setValue","formDataSubmit","FormData","bioToModify","file","append","name","post","subscribe","res","value","data","CVname","imgName","putBio","bio","fire","submitModifyBio","onFileModify","onPhotoModify","MiscDashboardComponent","experienceService","newExperience","formGroup","required","company","duration","getAllExperiences","postExperience","result","experiences","getExperiences","results","deleteExperience","splice","findIndex","item","experience","patchValue","saveExperience","ProjectsDashboardComponent","projectsService","toolboxItemService","toolboxService","toolboxItems","newProject","columnsToDisplay","projectDetailsTable","newToolBoxArr","description","youtube_link","github_link","getAllProjectsWithToolbox","getAllToolboxItems","projectArr","toolboxArr","getProjects","projects","forEach","project","getToolboxItemByProjectId","toolbox","Object","values","dataSource","getToolboxItems","items","postProject","resp","toolboxItem","console","log","postToolboxItem","deleteProject","i","slice","idProjectToEdit","projectToEdit","toolboxToEdit","putProject","projectToEditId","toolboxItemId","deleteFromToolbox","toolItem","indexOf","reset","clearForm","createProject","saveEditedProject","height","minHeight","animations","AuthGuardGuard","router","userInLocalSt","JSON","parse","localStorage","getItem","loggedIn","navigateByUrl","providedIn","Bio","input","assign","Experience","Project","ProjectsDataSource","rows","BioComponent","educationService","education","imageLink","getBio","getEducations","cv_link","image_link","downloadCV","ContactComponent","contactService","contactForm","email","phone","message","newMail","sendMail","error","LandingComponent","scrollToContact","emit","scrollTocontact","LoginComponent","loginService","loginUserData","identifiant","password","user","login","token","setItem","err","loginUser","MainComponent","githubService","renderer","getAccess","extractTKN","tagFragment","element","selectRootElement","scrollIntoView","behavior","ProjectsComponent","indexes","$project","$toolbox","entries","map","RegisterComponent","registrationService","registerUserData","valid","registerUser","ToolboxComponent","toolboxitemService","githubEvents","displayedColumns","response","getEvents","getProfile","profile","repos","gists","BioService","baseUrl","putBioURL","put","url","ContactService","emailData","observe","EducationService","putEducationURL","ExperienceService","experienceId","GitHubService","acsUrl","ProjectsService","putProjectsURL","TokenInterceptorService","next","tokenizedReq","clone","setHeaders","Authorization","getToken","handle","ToolboxService","projectId","object","ToolboxItemService","UsersService","registerURL","loginURL","getCurrentUser","stringify","userStoraged","removeItem","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingComponent } from './pages/landing/landing.component';\nimport { BioComponent } from './pages/bio/bio.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard/admin-dashboard.component';\nimport { BioDashboardComponent } from './dashboard/bio-dashboard/bio-dashboard.component';\nimport { ProjectsDashboardComponent } from './dashboard/projects-dashboard/projects-dashboard.component';\nimport { MiscDashboardComponent } from './dashboard/misc-dashboard/misc-dashboard.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthGuardGuard } from './guards/auth-guard.guard';\n\n\nconst routes: Routes = [\n  {path: '', component: MainComponent}, // can be accessed by everyone\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n\n  {path: 'dashboard',\n  component: AdminDashboardComponent, // can only be accessed if logedin\n  canActivate: [AuthGuardGuard],\n  children: [\n    {path: '', component: ProjectsDashboardComponent},\n    {path: 'bio', component: BioDashboardComponent},\n    {path: 'misc', component: MiscDashboardComponent},\n  ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ButtonComponent } from './components/button/button.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { LandingComponent } from './pages/landing/landing.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { BioComponent } from './pages/bio/bio.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { ProjectsComponent } from './pages/projects/projects.component';\nimport { ToolboxComponent } from './pages/toolbox/toolbox.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard/admin-dashboard.component';\nimport { ProjectsDashboardComponent } from './dashboard/projects-dashboard/projects-dashboard.component';\nimport { BioDashboardComponent } from './dashboard/bio-dashboard/bio-dashboard.component';\nimport { MiscDashboardComponent } from './dashboard/misc-dashboard/misc-dashboard.component';\nimport { MatTableModule } from '@angular/material/table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthGuardGuard } from './guards/auth-guard.guard';\nimport { UsersService } from './services/users.service';\nimport { TokenInterceptorService} from './services/token-interceptor.service';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n\n\n// Angular material imports\n// ***\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    FooterComponent,\n    LandingComponent,\n    TitleComponent,\n    BioComponent,\n    MainComponent,\n    ProjectsComponent,\n    ToolboxComponent,\n    ContactComponent,\n    AdminDashboardComponent,\n    ProjectsDashboardComponent,\n    BioDashboardComponent,\n    MiscDashboardComponent,\n    RegisterComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    CdkTableModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatTooltipModule\n  ],\n  providers: [AuthGuardGuard, UsersService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() label;\n  @Input() disabled: string; // usage : 'disabled' or nothing\n  @Input() icon: string;\n  @Input() imageName: string;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  checkButtonType(icon, imageName) {\n    if (icon !== undefined && icon !== null) {\n      return true;\n    } else if (imageName !== undefined && imageName !== null) {\n      return false;\n    }\n  }\n\n  onClick() {\n  }\n}\n","<div class=\"container-button\">\n    <div *ngIf=\"checkButtonType(icon, imageName); then thenBlock else elseBlock\"></div>\n\n    <ng-template #thenBlock>\n        <button [disabled]=\"disabled\"\n                (click)=\"onClick()\"\n                class=\"btn btn-primary action-button\">\n            <i class=\"{{icon}}\"></i>{{label}}\n        </button>\n    </ng-template>\n\n    <ng-template #elseBlock>\n        <button [disabled]=\"disabled\"\n                (click)=\"onClick()\"\n                class=\"btn btn-primary action-button\">\n            <div *ngIf=\"imageName!==undefined\">\n                {{label}}\n            </div>\n            <div *ngIf=\"imageName===undefined\">\n                {{label}}\n            </div>\n        </button>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n\n<div class=\"divider-white\"></div>\n\n<footer class=\"page-footer font-small mdb-color lighten-3 pt-4\">\n\n    <!-- Footer Links -->\n    <div class=\"container text-center text-md-left\">\n\n        <!-- Grid row -->\n        <div class=\"row\">\n            <!-- Grid column -->\n            <div class=\"col-md-3 col-lg-3 text-center mx-auto my-4\">\n\n                <!-- Social buttons -->\n                <h5 class=\"font-weight-bold mb-4\">i am on Internet!</h5>\n                <div class=\"social d-flex justify-content-around\">\n                    <!-- Twitter -->\n                    <a type=\"button\" class=\"btn-floating\" href=\"https://twitter.com/Ana60458091\" target=\"blank\">\n                        <i class=\"fab fa-twitter\"></i>\n                    </a>\n                    <!-- Instagram-->\n                    <a type=\"button\" class=\"btn-floating\" href=\"https://www.instagram.com/lattaral/\" target=\"blank\">\n                        <i class=\"fab fa-instagram\"></i>\n                    </a>\n                    <!-- Github -->\n                    <a type=\"button\" class=\"btn-floating\" href=\"https://github.com/lattara\" target=\"blank\">\n                        <i class=\"fab fa-github\"></i>\n                    </a>\n                    <!-- Stack overflow -->\n                    <a type=\"button\" class=\"btn-floating\" href=\"https://stackoverflow.com/users/11746772/lacodem\" target=\"blank\">\n                        <i class=\"fab fa-stack-overflow\"></i>\n                    </a>\n                </div>\n            </div>\n            <!-- Grid column -->\n        </div>\n        <!-- Grid row -->\n\n    </div>\n    <!-- Footer Links -->\n\n    <!-- Copyright -->\n    <div class=\"footer-copyright text-center py-3\">© Made with <i routerLink=\"/login\" class=\"far fa-heart\"></i>\n        coffee and good vibes\n    </div>\n    <!-- Copyright -->\n\n</footer>\n<!-- Footer -->","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent implements OnInit {\n  @Input() mode: 'title' | 'title-white' | 'subtitle' | 'section-subtitle' | 'text' = 'title' ;\n  @Input() text = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container [ngSwitch]=\"mode\">\n    <h1 class=\"title\" *ngSwitchCase=\"'title'\"> {{text}} </h1>\n    <h2 class=\"subtitle\" *ngSwitchCase=\"'subtitle'\"> {{text}} </h2>\n    <h2 class=\"section-subtitle\" *ngSwitchCase=\"'section-subtitle'\"> {{text}} </h2>\n    <h2 class=\"subtitle-float-right\" *ngSwitchCase=\"'subtitle-float-right'\"> {{text}} </h2>\n    <h2 class=\"subtitle-bio\" *ngSwitchCase=\"'subtitle-bio'\"> {{text}} </h2>\n    <h2 class=\"title-dashboard\" *ngSwitchCase=\"'title-dashboard'\"> {{text}} </h2>\n    <h2 class=\"subtitle-dashboard\" *ngSwitchCase=\"'subtitle-dashboard'\"> {{text}} </h2>\n    <h3 class=\"subsubtitle\" *ngSwitchCase=\"'subsubtitle'\"> {{text}} </h3>\n    <p class=\"text\" *ngSwitchCase=\"'text'\"> {{text}} </p>\n</ng-container>\n\n","import { Component, OnInit } from '@angular/core';\nimport { dashboardMenuItems } from './dashboard-menu-items';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss'],\n})\n\nexport class AdminDashboardComponent implements OnInit {\n\n  dashboardMenuItems = dashboardMenuItems;\n\n  constructor(private usersService: UsersService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.usersService.logout();\n  }\n\n\n}\n\n","<div class=\"row\">\n  <div class=\"sidebar col-2\">\n    \n    <i class=\"fas fa-cogs\"></i>\n    <app-title class=\"col-12\" [mode]=\"'title-dashboard'\" [text]=\"'Dashboard'\"></app-title>\n    <ul *ngFor=\"let item of dashboardMenuItems\">\n      <li routerLink=\"{{item.path}}\">{{item.caption}}</li>\n    </ul>\n    <app-button class=\"logout-button\" [label]=\"'log out'\" [icon]=\"'fas fa-sign-out-alt'\" (click)=\"logout()\"></app-button>\n    </div>\n  <div class=\"col-10 offset-2 router-outlet-container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","export const dashboardMenuItems = [\n    {\n        path: 'home',\n        caption: 'Projects',\n        index: 0,\n    },\n    {\n        path: 'bio',\n        caption: 'Biography',\n        index: 1,\n    },\n    {\n        path: 'misc',\n        caption: 'Miscellaneous',\n        index: 2,\n    },\n\n];\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ControlContainer } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Bio } from 'src/app/models/bio.model';\nimport { BioService } from '../../services/bio.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-bio-dashboard',\n  templateUrl: './bio-dashboard.component.html',\n  styleUrls: ['./bio-dashboard.component.scss']\n})\nexport class BioDashboardComponent implements OnInit {\n\n  bioToModify: Bio;\n  filesToUpload = [];\n  modifyBioForm = this.fb.group({\n    intro: [''],\n    cvLink: this.fb.control(''),\n    profileImgLink: this.fb.control('')\n  });\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private bioService: BioService) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onFileModify(event) {\n    if (event.target.files.length > 0) {\n      this.filesToUpload.push(event.target.files[0]);\n      this.modifyBioForm.get('cvLink').setValue(this.filesToUpload[0]);\n    }\n  }\n\n  onPhotoModify(event) {\n    if (event.target.files.length > 0) {\n      this.filesToUpload.push(event.target.files[0]);\n      this.modifyBioForm.get('profileImgLink').setValue(this.filesToUpload[1]);\n    }\n  }\n\n  submitModifyBio() {\n    const formDataSubmit = new FormData();\n    this.bioToModify = new Bio();\n    for (const file of this.filesToUpload) {\n      formDataSubmit.append('uploadedFiles', file, file.name);\n    }\n    this.http.post<any>('http://localhost:3000/bio/upload', formDataSubmit).subscribe(\n      res => {\n        this.bioToModify.intro = this.modifyBioForm.value.intro;\n        this.bioToModify.cvLink = res.data.CVname;\n        this.bioToModify.profileImgLink = res.data.imgName;\n        this.bioService.putBio(this.bioToModify, 1).subscribe(bio => {\n        });\n        Swal.fire('Bio is updated');\n      }\n    );\n  }\n}\n\n\n","<div class=\"container row\">\n\n    <app-title class=\"row\" [mode]=\"'subtitle-dashboard'\" [text]=\"'Bio'\"></app-title>\n\n    <form class=\"form col-12\" [formGroup]=\"modifyBioForm\" (ngSubmit)=\"submitModifyBio()\">\n        <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Intro </mat-label>\n            <textarea matInput placeholder=\"Placeholder\" formControlName=\"intro\"></textarea>\n        </mat-form-field>\n        </div>\n        <!-- CV modify -->\n        <span>Choose CV:</span>\n            <input enctype=\"multipart/form-data\" type=\"file\" name=\"cvLink\" (change)=\"onFileModify($event)\" class=\"chooseFile col-12\">\n        <!-- Profile photo modify -->\n        <span>Choose profile-photo:</span>\n            <input enctype=\"multipart/form-data\" type=\"file\" name=\"cvLink\" (change)=\"onPhotoModify($event)\" class=\"chooseFile col-12\">    \n\n\n        <div class=\"actions\">\n            <app-button type=\"submit\" class=\"send-form-button\" [label]=\"'Save details'\" [icon]=\"'fab fa-galactic-senate'\"\n                ></app-button>\n        </div>\n    </form>\n\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Experience } from 'src/app/models/experience';\nimport { ExperienceService } from 'src/app/services/experience.service';\n\n@Component({\n  selector: 'app-misc-dashboard',\n  templateUrl: './misc-dashboard.component.html',\n  styleUrls: ['./misc-dashboard.component.scss']\n})\nexport class MiscDashboardComponent implements OnInit {\n\n  experiences: Experience[];\n  newExperience: Experience = new Experience();\n\n  constructor(private experienceService: ExperienceService) { }\n\n  formGroup = new FormGroup({\n    title: new FormControl('', Validators.required),\n    company: new FormControl('', Validators.required),\n    duration: new FormControl('', Validators.required),\n  });\n\n  ngOnInit(): void {\n    this.getAllExperiences()\n  }\n\n  saveExperience() {\n    this.newExperience.title = this.formGroup.value.title;\n    this.newExperience.company = this.formGroup.value.company;\n    this.newExperience.duration = this.formGroup.value.duration;\n    this.experienceService.postExperience(this.newExperience).subscribe( result => this.experiences.push(result));\n  }\n\n\n  getAllExperiences(){\n    this.experienceService.getExperiences().subscribe(results => {\n      this.experiences = results;\n    }\n    );\n  }\n\n  deleteExperience(id: number) {\n    this.experienceService.deleteExperience(id).subscribe(\n      () => {\n        this.experiences.splice(this.experiences.findIndex(item => item.id === id), 1);\n      }\n    );\n  }\n\n  editExperience(id: number, experience: Experience) {\n    this.formGroup.patchValue(experience);\n  }\n\n\n\n}\n","<form [formGroup]=\"formGroup\" class=\"create-project-form col-12\">\n    <div class=\"form-group\">\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Title</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"title\" color=\"accent\" class=\"col-6\">\n        </mat-form-field>\n            <mat-form-field appearance=\"outline\" color=\"accent\">\n                <mat-label>Company</mat-label>\n                <input matInput placeholder=\"Placeholder\" formControlName=\"company\" class=\"col-6\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" color=\"accent\">\n                <mat-label>Duration</mat-label>\n                <input matInput placeholder=\"Placeholder\" formControlName=\"duration\" class=\"col-6\">\n            </mat-form-field>\n    </div>\n    <app-button class=\"download-button\" [label]=\"'Save'\" [icon]=\"'fas fa-download'\" (click)=\"saveExperience()\"></app-button>\n</form>\n\n<div class=\"col-12 experience\">\n    <app-title class=\"education-title\" [mode]=\"'subsubtitle'\" [text]=\"'Experiences'\">\n    </app-title>\n    <ul *ngFor = \"let exp of experiences\">\n        <li>{{exp.title}} / {{exp.company}} / {{exp.duration}} <i class=\"far fa-trash-alt\" (click)=\"deleteExperience(exp.id)\"></i> <i class=\"far fa-edit\" (click)=\"editExperience(exp.id, exp)\"></i> </li>\n        \n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Project } from 'src/app/models/project.model';\nimport { dashboardMenuItems } from '../admin-dashboard/dashboard-menu-items';\nimport { ToolboxItemService } from 'src/app/services/toolboxItem.service';\nimport { ToolboxService } from 'src/app/services/toolbox.service';\nimport { ToolboxItem } from 'src/app/models/toolboxItem';\nimport { ProjectsDataSource } from '../../models/projectDataSource';\n\n@Component({\n  selector: 'app-projects-dashboard',\n  templateUrl: './projects-dashboard.component.html',\n  styleUrls: ['./projects-dashboard.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ProjectsDashboardComponent implements OnInit {\n\n  constructor(\n    private projectsService: ProjectsService,\n    private toolboxItemService: ToolboxItemService,\n    private toolboxService: ToolboxService) { }\n\n  dashboardMenuItems = dashboardMenuItems;\n  projects: Project[];\n  toolboxItems: ToolboxItem[] = [];\n  newProject: Project = new Project();\n  columnsToDisplay = ['id', 'name', 'edit/delete'];\n  projectToEdit: Project;\n  toolboxToEdit: any;\n  idProjectToEdit: number;\n  expandedElement: Project | null;\n  projectDetailsTable: Project[] = [];\n  dataSource: ProjectsDataSource | null;\n  project: Project;\n  toolbox: ToolboxItem[];\n  newToolBoxArr = [];\n\n  formGroup = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    youtube_link: new FormControl('', Validators.required),\n    github_link: new FormControl('', Validators.required),\n  });\n\n  ngOnInit(): void {\n    this.getAllProjectsWithToolbox();\n    this.getAllToolboxItems();\n  }\n\n  getAllProjectsWithToolbox() {\n    let projectArr: Project [];\n    let toolboxArr: ToolboxItem [];\n    this.projectsService.getProjects().subscribe((projects: Project[]) => {\n      projectArr = projects;\n      this.projects = projects;\n      projects.forEach(project => {\n        this.toolboxService.getToolboxItemByProjectId(project.id).subscribe((toolbox: ToolboxItem[]) => {\n          toolboxArr = Object.values(toolbox);\n          project.toolbox = toolboxArr;\n        }\n        );\n        this.dataSource = new ProjectsDataSource(this.projects);\n      });\n    });\n  }\n\n  getAllToolboxItems() {\n    this.toolboxItemService.getToolboxItems().subscribe(items => {\n      this.toolboxItems = items;\n    });\n  }\n\n  createProject() {\n    this.newProject.name = this.formGroup.value.name;\n    this.newProject.description = this.formGroup.value.description;\n    this.newProject.youtube_link = this.formGroup.value.youtube_link;\n    this.newProject.github_link = this.formGroup.value.github_link;\n    this.projects.push(this.newProject);\n    this.projectsService.postProject(this.newProject).subscribe((resp) => {\n      this.newProject.id = resp.id;\n      this.getAllProjectsWithToolbox();\n      this.newToolBoxArr.forEach(toolboxItem => {\n        console.log(toolboxItem.id);\n        this.toolboxService.postToolboxItem(this.newProject.id, toolboxItem.id).subscribe(() => console.log('success!'));\n      });\n    }\n    );\n  }\n\n  deleteProject(project: Project) {\n    this.projectsService.deleteProject(project.id).subscribe(\n      () => {\n        for (let i = 0; i < this.projects.length; i++) {\n          if (this.projects[i].id === project.id) {\n            this.projects.slice(i, 1);\n            this.getAllProjectsWithToolbox();\n          }\n        }\n      }\n    );\n  }\n\n  editProject(project: Project) {\n    this.idProjectToEdit = project.id;\n    this.projectToEdit = project;\n    this.toolboxToEdit = project.toolbox;\n    this.formGroup.patchValue(project);\n  }\n\n  saveEditedProject() {\n    this.projectToEdit.name = this.formGroup.value.name;\n    this.projectToEdit.description = this.formGroup.value.description;\n    this.projectToEdit.youtube_link = this.formGroup.value.youtube_link;\n    this.projectToEdit.github_link = this.formGroup.value.github_link;\n    this.projectsService.putProject(this.projectToEdit, this.idProjectToEdit).subscribe(result => { this.getAllProjectsWithToolbox(); });\n  }\n\n  // toolbox items logic\n  removeToolboxItem(projectToEditId: number, toolboxItemId: number, i: number) {\n    this.toolboxService.deleteFromToolbox(projectToEditId, toolboxItemId).subscribe(\n      () => {\n        this.projectToEdit.toolbox.splice(i, 1);\n      }\n    );\n  }\n\n  addToolboxItem(projectToEditId: number, toolboxItemId: number, toolboxItem: ToolboxItem) {\n    this.toolboxService.postToolboxItem(projectToEditId, toolboxItemId).subscribe(\n      () => {\n        this.toolboxToEdit.push(toolboxItem);\n      }\n    );\n  }\n\n  addToolboxItemToNewProject(toolItem: ToolboxItem) {\n    this.newToolBoxArr.push(toolItem);\n    const index = this.toolboxItems.indexOf(toolItem);\n    this.toolboxItems.splice(index, 1);\n  }\n\n  removeToolboxItemFromNewProject(toolboxItem: ToolboxItem, i: number) {\n    this.newToolBoxArr.splice(i, 1);\n    this.toolboxItems.push(toolboxItem);\n  }\n\n  clearForm() {\n    this.projectToEdit.toolbox = [];\n    this.formGroup.reset();\n  }\n\n}\n","<div class=\"container\">\n    <app-title class=\"row\" [mode]=\"'subtitle-dashboard'\" [text]=\"'Projects'\"></app-title>\n    \n    <form [formGroup]=\"formGroup\" class=\"create-project-form col-12\">\n        <div>\n            <div class=\"input-first-row\">\n            <mat-form-field appearance=\"outline\" color=\"accent\">\n                <mat-label>Project name</mat-label>\n                <input matInput placeholder=\"Placeholder\" formControlName=\"name\" color=\"accent\">\n            </mat-form-field>\n            <i class=\"fas fa-broom\" matTooltip=\"Clear the form\" (click)=\"clearForm()\" [matTooltipPosition]= \"'above'\"></i>\n            </div>\n            <div class=\"project-form-link-fields\">\n                <mat-form-field appearance=\"outline\" color=\"accent\">\n                    <mat-label>Youtube link</mat-label>\n                    <input matInput placeholder=\"Placeholder\" formControlName=\"youtube_link\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" color=\"accent\">\n                    <mat-label>Github link</mat-label>\n                    <input matInput placeholder=\"Placeholder\" formControlName=\"github_link\">\n                </mat-form-field>\n            </div>\n        </div>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Description</mat-label>\n            <textarea matInput formControlName=\"description\" color=\"accent\"></textarea>\n        </mat-form-field>\n    \n        <!-- edit existing project toolbox -->\n        <div *ngIf=\"projectToEdit\">\n            <span>Current Toolbox items: </span><br>\n        <span *ngFor=\"let toolboxItem of projectToEdit.toolbox; let i=index\" class=\"toolboxItems\"> {{toolboxItem.name}} <i class=\"fas fa-times\" (click)=\"removeToolboxItem(projectToEdit.id, toolboxItem.id, i)\"></i></span> <br>\n\n        <span>Add Toolbox Item to project</span> <br>\n            <span *ngFor=\"let toolboxItem of toolboxItems; let i=index\" class=\"toolboxItems\">{{toolboxItem.name}} <i class=\"fas fa-plus\" (click)=\"addToolboxItem(projectToEdit.id, toolboxItem.id, toolboxItem)\"></i></span> \n        </div>\n    \n        <!-- add new project toolbox -->\n        <div *ngIf =\"!projectToEdit\">\n            <span class=\"toolbox-title\">Add Toolbox Item to project</span>  <br>\n                <span *ngFor=\"let toolboxItem of toolboxItems; let i=index\" class=\"toolboxItems toolbox-items-before\">{{toolboxItem.name}} <i class=\"fas fa-plus\" (click)=\"addToolboxItemToNewProject(toolboxItem)\"></i></span> <br>\n            <span class=\"toolbox-title\">Current Toolbox items: </span>  <br>\n        <span *ngFor=\"let toolboxItem of newToolBoxArr; let i=index\" class=\"toolboxItems\"> {{toolboxItem.name}} <i class=\"fas fa-times\" (click)=\"removeToolboxItemFromNewProject(toolboxItem, i)\"></i></span> \n        </div>\n    </form>\n    \n    \n    <div class=\"form-buttons\">\n        <app-button class=\"send-form-button\" [label]=\"'Save as new'\" [icon]=\"'fab fa-galactic-senate'\"\n            (click)=\"createProject()\"></app-button>\n        <app-button class=\"edit-form-button\" [label]=\"'Edit existing'\" [icon]=\"'fab fa-galactic-senate'\"\n            (click)=\"saveEditedProject()\"></app-button>\n    </div>\n    \n    \n    \n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8 col-10\">\n        <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of columnsToDisplay; let last = last\">\n            <th mat-header-cell *matHeaderCellDef> {{col}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element[col]}} <i [ngClass]=\"{'last-child': last}\" class=\"far fa-edit\"\n                    (click)=\"editProject(element)\"></i><i [ngClass]=\"{'last-child': last}\" class=\"far fa-trash-alt\"\n                    (click)=\"deleteProject(element)\"></i></td>\n    \n        </ng-container>\n    \n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n    \n                    <!-- project details start -->\n                    <div class=\"row\">\n                        <div class=\"col-12 project-details-description\">{{element.description}}</div>\n                        <div class=\"col-12 project-details-link\"><i class=\"fab fa-youtube\"></i>{{element.youtube_link}}\n                        </div>\n                        <div class=\"col-12 project-details-link\"><i class=\"fab fa-github\"></i>{{element.github_link}}</div>\n                        <div class=\"col-12 project-details-link\" *ngFor = \"let toolboxItem of element.toolbox\"><i class=\"{{toolboxItem.sortcut}}\"></i>{{toolboxItem.name}}</div>\n    \n                    </div>\n    \n                    <!--project details finish -->\n                </div>\n            </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n            [class.expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n    </table>\n    </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\n  constructor(private usersService: UsersService, private router: Router) { }\n\n  canActivate() {\n    const userInLocalSt: User =  JSON.parse(localStorage.getItem('user'));\n    if (this.usersService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n  }\n}\n","export class Bio {\n    id: number;\n    intro!: string;\n    cvLink!: string;\n    profileImgLink!: string;\n    constructor(input?: Bio) {\n        Object.assign(this, input);\n    }\n}\n","export class Experience {\n    id!: number;\n    // tslint:disable-next-line: variable-name\n    title!: string;\n    // tslint:disable-next-line: variable-name\n    company!: string;\n    duration!: string;\n}\n","import { ToolboxItem } from './toolboxItem';\n\nexport class Project {\n    id!: number;\n    name!: string;\n    description!: string;\n    // tslint:disable-next-line: variable-name\n    youtube_link!: string;\n    // tslint:disable-next-line: variable-name\n    github_link!: string;\n    toolbox?: ToolboxItem[] = [];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable, of } from 'rxjs';\n\nimport { Project } from '../models/project.model';\nimport { ProjectsService } from '../services/projects.service';\n\n\nexport class ProjectsDataSource extends DataSource<Project> {\n    constructor(private projects: Project[]) {\n        super();\n    }\n\n    connect(): Observable<Project[]> {\n        const rows = [];\n        this.projects.forEach(project => rows.push(project));\n        return of(rows);\n    }\n\n    disconnect() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BioService } from 'src/app/services/bio.service';\nimport { Bio } from 'src/app/models/bio.model';\nimport { EducationService } from 'src/app/services/education.service';\nimport { Education } from 'src/app/models/education';\nimport { ExperienceService } from 'src/app/services/experience.service';\nimport { Experience } from 'src/app/models/experience';\n\n@Component({\n  selector: 'app-bio',\n  templateUrl: './bio.component.html',\n  styleUrls: ['./bio.component.scss']\n})\nexport class BioComponent implements OnInit {\n\n  bio: Bio[] = [];\n  education: Education[] = [];\n  experience: Experience[] = [];\n  intro = '';\n  cvLink = '';\n  imageLink = '';\n  constructor(private bioService: BioService, private educationService: EducationService, private experienceService: ExperienceService) { }\n\n  ngOnInit(): void {\n    this.getBio();\n    this.getEducations();\n    this.getExperiences();\n  }\n\n  getBio() {\n    this.bioService.getBio().subscribe(data => {\n      console.log('getbio', data);\n      this.intro = (data[0].intro);\n      this.cvLink = (data[0].cv_link);\n      this.imageLink = (data[0].image_link);\n    }\n    );\n  }\n\n  getEducations() {\n    this.educationService.getEducations().subscribe(data => {\n      console.log(data);\n      this.education = data;\n    });\n  }\n\n  getExperiences() {\n    this.experienceService.getExperiences().subscribe(data => {\n      console.log(data);\n      this.experience = data;\n    });\n  }\n\n  downloadCV() {\n    console.log('download cv');\n  }\n}\n","<div class=\"container bio-container\">\n\n    <div class=\"row align-self-center\">\n        <!-- big box -->\n        <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 bio-card\">\n                <img class=\"image-fluid profile-image\" src=\"http://localhost:3000/api/uploads/{{imageLink}}\"\n                        alt=\"profile photo\">\n                <div class=\"row button-container\">\n                    <a href=\"http://localhost:3000/api/uploads/{{cvLink}}\" target=\"_blank\">\n                        <app-button class=\"download-button\" [label]=\"'download CV'\" [icon]=\"'fas fa-download'\"(click)=\"downloadCV()\"></app-button>\n                        </a>\n                </div>\n            </div>\n        </div>\n        <!-- --------big box---->\n\n        <div class=\"col-xs-12 col-sm-12 col-md-8 col-lg-8 col-xl-8 bio-short-text-container\">\n            <!-------container long box + 4 sm boxes ------->\n            <div class=\"row bio-short-text\">\n                <!-------container long box ------->\n                <p class=\"row text-intro\">please allow me to introduce myself</p>\n                <app-title class=\"row name\" [mode]=\"'subtitle-bio'\" [text]=\"'Ana Topic'\"></app-title>\n                <div class=\"divider-bio\"></div>\n                <p class=\"text-colums\">\n                {{intro}}\n            <div class=\"row skillset-container\">\n                <!-------container 4 sm boxes ------->\n                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 education\">\n                    <app-title class=\"education-title\" [mode]=\"'subsubtitle'\" [text]=\"'Education'\">\n                    </app-title>\n                    <ul *ngFor = \"let edu of education\">\n                        <li>{{edu.diploma_name}} / {{edu.school}} </li>\n                    </ul>\n                </div>\n\n                \n                    <!-------container 4 sm boxes ------->\n                    <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 experience\">\n                        <app-title class=\"education-title\" [mode]=\"'subsubtitle'\" [text]=\"'Experience'\">\n                        </app-title>\n                        <ul *ngFor = \"let exp of experience\">\n                            <li>{{exp.title}} / {{exp.company}} / {{exp.duration}}</li>\n                            \n                        </ul>\n                    </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ContactService } from '../../services/contact.service';\nimport { Email } from '../../models/email.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n\n\n  constructor( private fb: FormBuilder, private contactService: ContactService) { }\n\n  contactForm: FormGroup = this.fb.group({\n    name: [''],\n    email: [''],\n    phone: [''],\n    message: [''],\n  });\n\n\n  ngOnInit(): void {\n  }\n\n// getters\n  get name() {\n    return this.contactForm.get('name');\n  }\n\n  get email() {\n    return this.contactForm.get('email');\n  }\n\n  get phone() {\n    return this.contactForm.get('phone');\n  }\n  get message() {\n    return this.contactForm.get('message');\n  }\n\n  sendMail(){\n    const newMail: Email = this.contactForm.value;\n    const name = this.name.value;\n    const email = this.email.value;\n    const phone = this.phone.value;\n    const message = this.message.value;\n    this.contactService.sendMail(name, email, phone, message).subscribe(\n      (error) => console.log(error)\n    );\n    Swal.fire('Your message is sent. Thanks :)');\n  }\n\n\n}\n\n","<div class=\"container\">\n\n    <div class=\"row\">\n\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-5 col-xl-5 contact-text-container\">\n            <i class=\"far fa-envelope envelope-big\"></i>\n            <app-title class=\"col-12\" [mode]=\"'subtitle-float-right'\" [text]=\"'Say Hi!'\"></app-title>\n            <p>Don't be shy!</p>\n            </div>\n        <div class=\"col-xs-12 col-sm-12 col-md-8 col-lg-5 col-xl-5 contact-form-container\">\n            <mat-form [formGroup]=\"contactForm\" (ngSubmit)=\"sendMail()\" method=\"POST\" action=\"/send-email\"  color=\"accent\">\n        <mat-form-field class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\" appearance=\"outline\">\n                        <mat-label>Name</mat-label>\n                        <input matInput formControlName=\"name\">\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\" appearance=\"outline\">\n                        <mat-label>Email</mat-label>\n                        <input matInput formControlName=\"email\">\n                    </mat-form-field>\n                    <mat-form-field class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"  appearance=\"outline\">\n                        <mat-label>Phone</mat-label>\n                        <input matInput formControlName=\"phone\">\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\" appearance=\"outline\">\n                        <mat-label>Message</mat-label>\n                        <textarea matInput formControlName=\"message\"></textarea>\n        </mat-form-field>\n        </mat-form> \n        <app-button (click)=\"sendMail()\" class=\"contact-button\" [label]=\"'Contact'\" [icon]=\"'far fa-envelope'\"></app-button>\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\n\nexport class LandingComponent implements OnInit {\n\n  // tslint:disable-next-line: no-output-native\n  @Output() scrollToContact: EventEmitter<any> = new EventEmitter();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  scrollTocontact() {\n      this.scrollToContact.emit(null);\n  }\n\n}\n","<div class=\"row landing-title-group\">\n\n    <div class=\"col-4 landing-icons\">\n        <i class=\"fas fa-code\"></i>\n        <i class=\"fas fa-headphones-alt\"></i>\n        <i class=\"fab fa-angular fa-4x red\"></i>\n        <i class=\"fas fa-beer\"></i>\n        <i class=\"fas fa-glasses\"></i>\n        <i class=\"fas fa-terminal\"></i>\n        <i class=\"fas fa-jedi red\"></i>\n    </div>\n\n    <div class=\"col-5 vertical-divider-red\">\n        <app-title [mode]=\"'title'\" [text]=\"'Ana Topic'\"></app-title>\n        <div class=\"featured-text\">Full stack Web Developer, JS padawan,\n            Angular entusiast, <br>\n            in life long relationship with books,\n            board games and <br> craft beer.\n        </div>\n        <div class=\"container-buttons\">\n            <a href=\"https://github.com/lattara\" target=\"_blank\">\n                <app-button class=\"git-hub-button\" [label]=\"'Git hub profile'\" [icon]=\"'fab fa-github'\"></app-button>\n            </a>\n            <app-button [label]=\"'Contact'\" [icon]=\"'fas fa-phone-alt'\" (click)=\"scrollTocontact()\"></app-button>\n        </div>\n    </div>\n    <div class=\"col-12 arrow-animated\">\n        <i class=\"fas fa-chevron-down\" routerLink=\"bio\"></i>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = new FormGroup({\n    identifiant: new FormControl(),\n    password: new FormControl('', Validators.required),\n  });\n\n  constructor(private loginService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser() {\n    const user = this.loginUserData.value;\n    this.loginService.login(user).subscribe(\n      result => {\n        const token = result['token'];\n        localStorage.setItem('token', token);\n        this.router.navigateByUrl('/dashboard');\n      },\n      err => {\n          Swal.fire(err.error);\n      });\n    }\n\n\n}\n","<div class=\"container\">\n    <app-title class=\"row title-login\" [mode]=\"'subtitle'\" [text]=\"'login'\"></app-title>\n        <div class=\"row login-form-container\">\n            <div class=\"form-frame\">\n            <mat-form [formGroup]=\"loginUserData\">\n        <mat-form-field class=\"col-12\" appearance=\"outline\">\n                        <mat-label>Identifiant</mat-label>\n                        <input formControlName=\"identifiant\" matInput color=\"accent\">\n                        \n                    </mat-form-field>\n                    <br>\n                    <mat-form-field class=\"col-12\" appearance=\"outline\" color=\"accent\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" formControlName=\"password\" color=\"accent\">\n                    </mat-form-field>\n        </mat-form>\n        <app-button class=\"login-button\" [label]=\"'login'\" [icon]=\"'far fa-envelope'\" (click)=\"loginUser()\"></app-button>\n        </div>\n    </div>\n    <app-button class=\"go-home-button\" [label]=\"'Go home'\" [icon]=\"'far fa-envelope'\" routerLink=\"/\"></app-button>\n</div>\n\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { GitHubService } from 'src/app/services/git-hub.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n\n  constructor( private githubService: GitHubService, private router: Router, private renderer: Renderer2) { }\n\n  tagFragment: string;\n\n  ngOnInit(): void {\n    this.githubService.getAccess().subscribe(resp => {\n      const extractTKN: any = Object.values(resp)[0];\n      localStorage.setItem('token', extractTKN);\n      this.router.navigateByUrl('');\n    });\n  }\n\n  scrollToContact(){\n    this.tagFragment = 'app-contact';\n    const element = this.renderer.selectRootElement(`${this.tagFragment}`, true);\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n\n}\n","<div class=\"main-container\">\n<app-landing (scrollToContact)= \"scrollToContact()\"></app-landing>\n<!-- <app-title [mode]=\"'section-subtitle'\" [text]=\"'Projects'\"></app-title> -->\n<app-projects></app-projects>\n<!-- <app-title [mode]=\"'section-subtitle'\" [text]=\"'Biography'\"></app-title> -->\n<app-bio></app-bio>\n<app-toolbox></app-toolbox>\n<!-- <app-title [mode]=\"'section-subtitle'\" [text]=\"'Contact'\"></app-title>  -->\n<app-contact></app-contact>\n<app-footer></app-footer> \n</div>","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Project } from 'src/app/models/project.model';\nimport { forkJoin } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private projectsService: ProjectsService,\n    private http: HttpClient) { }\n  projects: Project[] = [];\n  indexes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  project: any;\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.getAllProjectsWithToolbox();\n    console.log('this projects are', this.projects);\n  }\n\n  public getAllProjectsWithToolbox() {\n    for (let i = 1; i < 8; i++) {\n      const $project = this.http.get(`http://localhost:3000/api/projects/${i}`);\n      const $toolbox = this.http.get(`http://localhost:3000/api/toolbox/${i}`);\n      forkJoin([$project, $toolbox]).subscribe(results => {\n        this.project = results[0];\n        if (Object.keys(this.project).length === 0) {\n          delete this.project.toolbox;\n        } else {\n          this.project.toolbox = Object.entries(results[1]).map(e => e[1]);\n          this.projects.push(this.project);\n        }\n      }\n      );\n    }\n  }\n}\n","<div class=\"container\">\n    <div *ngIf=\"projects.length === 0\">\n        <span>There is no projects to display for the moment</span>\n    </div>\n    <div *ngIf=\"projects.length !== 0\" class=\"row justify-content-center\">\n        <div class=\"col-sm-12 col-md-12 col-xl-6 project-details\" *ngFor=\"let project of projects; let i = index\">\n            <div class=\"content-container\">\n            <ul class=\"number col-auto\"> {{i+1}}. </ul>\n            <li class=\"technologies\">\n                <i *ngFor=\"let toolboxItem of project.toolbox\" class=\"fab {{toolboxItem.sortcut}}\"></i>\n            </li>\n            <li class=\"project-title\">\n                <app-title class=\"row name\" [mode]=\"'subsubtitle'\" [text]=\"project.name\"></app-title>\n            </li>\n            <li class=\"project-description col-xs-12 col-sm-12 col-md-12 col-lg-10 col-xl-10\">{{project.description}}\n            </li>\n            <div class=\"buttons\">\n                <a href=\"{{project.github_link}}\">\n                    <app-button class=\"button\" [label]=\"'Github'\" [icon]=\"'fab fa-github'\"></app-button>\n                </a>\n                <a href=\"{{project.youtube_link}}\" target=\"_blank\">\n                    <app-button class=\"button\" [label]=\"'Demo'\" [icon]=\"'fab fa-youtube'\"></app-button>\n                </a>\n            </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div div class=\"arrow-animated col-12 justify-content-center\">\n    <i routerLink=\"bio\" class=\"fas fa-chevron-down\"></i>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { nameValidator } from '../../guards/custom-validators';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = new FormGroup({\n    identifiant: new FormControl('', [Validators.required]),\n    password: new FormControl(),\n    email: new FormControl(),\n  });\n\n  constructor(private registrationService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  registerUser() {\n    if (!this.registerUserData.valid) {\n      Swal.fire('invalid or taken name, please choose another name');\n      return false;\n    } else {\n      const user = this.registerUserData.value;\n      this.registrationService.registerUser(user).subscribe(\n        result => {\n          const token = result['token'];\n          localStorage.setItem('token', token);\n          this.router.navigateByUrl('/dashboard');\n        },\n        err => {\n          Swal.fire(err.error);\n        });\n    }\n  }\n}\n","<div class=\"container\">\n    <app-title class=\"row title-register\" [mode]=\"'subtitle'\" [text]=\"'Register'\"></app-title>\n        <div class=\"row register-form-container\">\n            <div class=\"form-frame\">\n            <mat-form [formGroup]=\"registerUserData\">\n        <mat-form-field class=\"col-12\" appearance=\"outline\">\n                        <mat-label>Identifiant</mat-label>\n                        <input formControlName=\"identifiant\" matInput>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field class=\"col-6\" appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input matInput formControlName=\"password\">\n                    </mat-form-field>\n                    <mat-form-field class=\"col-6\"  appearance=\"outline\">\n                        <mat-label>Email</mat-label>\n                        <input formControlName=\"email\" matInput>\n                    </mat-form-field>\n        </mat-form>\n        <app-button class=\"register-button\" [label]=\"'Register'\" [icon]=\"'far fa-envelope'\" (click)=\"registerUser()\"></app-button>\n        </div>\n    </div>\n        <span routerLink = \"/login\" class=\"already-acc\">I already have an acc</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToolboxItemService } from '../../services/toolboxItem.service';\nimport { ToolboxItem } from 'src/app/models/toolboxItem';\nimport { GitHubService } from '../../services/git-hub.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-toolbox',\n  templateUrl: './toolbox.component.html',\n  styleUrls: ['./toolbox.component.scss']\n})\nexport class ToolboxComponent implements OnInit {\n\n  constructor(private toolboxitemService: ToolboxItemService, private githubService: GitHubService, private router: Router) { }\n  toolboxItems: ToolboxItem[] = [];\n  githubEvents = [];\n  repos: number;\n  gists: number;\n  displayedColumns = ['EVENT TYPE', 'REPOSITORY', 'TIME'];\n  dataSource = new MatTableDataSource<any>(this.githubEvents);\n\n  ngOnInit(): void {\n    this.toolboxitemService.getToolboxItems().subscribe(\n      response => {\n        this.toolboxItems = response;\n      }\n    );\n\n    this.githubService.getEvents().subscribe(\n      response => {\n        this.githubEvents = response;\n        this.dataSource.data = response.slice(0, 5);\n      }\n    );\n\n    this.githubService.getProfile().subscribe(\n      response => {\n        const profile = response;\n        // tslint:disable-next-line: no-string-literal\n        this.repos = profile['public_repos'];\n        // tslint:disable-next-line: no-string-literal\n        this.gists = profile['public_gists'];\n      }\n    );\n  }\n}\n\n\n\n","<div class=\"container justify-content-center\">\n    <div class=\"row toolbox-container\">\n\n        <app-title class=\"toolbox-title justify-content-center\" [mode]=\"'subtitle'\"\n            [text]=\"'Technologies I feel comfortable working with'\"></app-title>\n        <ul class=\"toolboxItems-container justify-content-center col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n            <li *ngFor=\"let item of toolboxItems\" class=\"skill-grouped\"><i class=\"{{item.sortcut}}\"></i> {{item.name}}\n                <mat-progress-bar mode=\"determinate\" value=\"{{item.master_level}}\"></mat-progress-bar>\n            </li>\n        </ul>\n\n        <div class=\"github-activity col-12\">\n\n            <div class=\"table-container\">\n                <mat-table #table [dataSource]=\"dataSource\">\n                    <ng-container matColumnDef=\"EVENT TYPE\">\n                        <mat-header-cell *matHeaderCellDef> EVENT TYPE </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"mobile-label\">EVENT TYPE: </span>\n                            <span class=\"table-content\">{{element.type}}</span>\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"REPOSITORY\">\n                        <mat-header-cell *matHeaderCellDef> REPOSITORY </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"mobile-label\">REPOSITORY: </span>\n                            <span class=\"table-content\"> {{element.repo.name}}</span>\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"TIME\">\n                        <mat-header-cell *matHeaderCellDef> TIME </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"mobile-label\">TIME: </span>\n                            <span class=\"table-content\">{{element.created_at}}</span>\n                        </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n            </div> \n             <div class=\"col-12 repos-gists\">\n            <span> Total repositories: {{repos}}</span><br>\n            <span> Total Gists: {{gists}}</span>\n        </div>   \n        </div>\n       \n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { Bio } from '../models/bio.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BioService {\n\n    private baseUrl = 'http://localhost:3000';\n\n    constructor(private http: HttpClient, private router: Router) {\n    }\n\n    getBio(): Observable<any> {\n        return from(this.http.get('http://localhost:3000/api/bio'));\n    }\n\n    putBio(bio: Bio, id: number): Observable<any> {\n        const putBioURL = `${this.baseUrl}/bio/`;\n        console.log(putBioURL);\n        return this.http.put(putBioURL, bio);\n    }\n\n    postBio(bio: Bio): Observable<any> {\n        return this.http.post(`${this.baseUrl}/bio`, bio);\n    }\n\n    deleteBio(id: number): Observable<any> {\n        const url = `${this.baseUrl}/bio`;\n        return this.http.delete(url);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Email } from '../models/email.model';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContactService {\n\n    constructor(private http: HttpClient) { }\n\n    sendMail(name, email, phone, message) {\n        const url = 'http://localhost:3000/api/contact/send';\n        const emailData = {\n            name,\n            email,\n            phone,\n            message,\n        };\n        return this.http.post(url, emailData, { observe: 'response' });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Education } from '../models/education';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationService {\n\n    private baseUrl = 'http://localhost:3000/api/education';\n\n    constructor(private http: HttpClient, private router: Router) {\n    }\n\n    getEducations(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    putEducation(education: Education, id: number): Observable<any> {\n        const putEducationURL = `${this.baseUrl}/${id}`;\n        return this.http.put(putEducationURL, education);\n    }\n\n    postEducation(education: Education): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, education);\n    }\n\n    deleteEducation(id: number): Observable<any> {\n        const url = `${this.baseUrl}/${id}`;\n        return this.http.delete(url);\n    }\n\n    getEducationById(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Experience } from '../models/experience';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExperienceService {\n\n    private baseUrl = 'http://localhost:3000/api/experience';\n\n    constructor(private http: HttpClient, private router: Router) {\n    }\n\n    getExperiences(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    postExperience(experience: Experience): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, experience);\n    }\n\n    getExperienceById(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    deleteExperience(experienceId: number): Observable<any> {\n        const url = `${this.baseUrl}/${experienceId}`;\n        return this.http.delete(url);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../models/project.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubService {\n\n  private baseUrl = 'https://api.github.com/users/lattara';\n  private acsUrl = 'http://localhost:3000/api/tkn';\n\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getEvents(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/events`);\n  }\n\n  getProfile() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getAccess(): Observable<any> {\n    return this.http.get(`${this.acsUrl}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, forkJoin, merge, concat, combineLatest, of, from } from 'rxjs';\n\nimport { Project } from '../models/project.model';\nimport { Router } from '@angular/router';\nimport { ToolboxItem } from '../models/toolboxItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  private baseUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  getlastId(): Observable<any> {\n    return from(this.http.get('http://localhost:3000/api/projects/lastId'));\n  }\n\n  getProjects(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/projects`);\n  }\n\n  putProject(project: Project, id: number): Observable < any > {\n    const putProjectsURL = `${this.baseUrl}/projects/${id}`;\n    return this.http.put(putProjectsURL, project);\n  }\n\n  postProject(project: Project): Observable < any > {\n    return this.http.post(`${this.baseUrl}/projects`, project);\n  }\n\n\n\n  deleteProject(id: number): Observable < any > {\n    const url = `${this.baseUrl}/projects/${id}`;\n    return this.http.delete(url);\n  }\n\n  getProjectById(id: number): Observable < any > {\n    return this.http.get(`${this.baseUrl}/projects/${id}`);\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { UsersService } from '../services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private usersService: UsersService) { }\n\n  intercept(req, next) {\n    // makes clone of the request\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        // set token in headers\n        Authorization: `Bearer ${this.usersService.getToken()}` // creates Bearer convention token\n      }\n    });\n    // return modified req with token inside\n    return next.handle(tokenizedReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../models/project.model';\nimport { Router } from '@angular/router';\nimport { ToolboxItem } from '../models/toolboxItem';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class ToolboxService {\n\n  private baseUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  getToolboxItems(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolboxItem`);\n  }\n\n  deleteFromToolbox(projectId: number, toolboxItemId: number): Observable<any> {\n    const url = `${this.baseUrl}/toolbox/${projectId}&${toolboxItemId}`;\n    return this.http.delete(url);\n  }\n\n  postToolboxItem(projectId: number, toolboxItemId: number): Observable<any> {\n    const object = {projectId, toolboxItemId};\n    return this.http.post(`${this.baseUrl}/toolbox`, {projectId, toolboxItemId});\n  }\n\n  getToolboxItemById(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolboxItem/${id}`);\n  }\n\n  getToolboxItemByProjectId(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolbox/${id}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../models/project.model';\nimport { Router } from '@angular/router';\nimport { ToolboxItem } from '../models/toolboxItem';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class ToolboxItemService {\n\n  private baseUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  putToolboxItem(toolboxItem: ToolboxItem, id: number): Observable<any> {\n    console.log(toolboxItem);\n    const putProjectsURL = `${this.baseUrl}/toolboxItem/${id}`;\n    console.log(putProjectsURL);\n    return this.http.put(putProjectsURL, toolboxItem);\n  }\n\n  postToolboxItem(toolboxItem: Project): Observable<any> {\n    return this.http.post(`${this.baseUrl}/toolboxItem`, toolboxItem);\n  }\n\n  getToolboxItems(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolboxItem`);\n  }\n\n  deleteToolboxItem(id: number): Observable<any> {\n    const url = `${this.baseUrl}/toolboxItem/${id}`;\n    return this.http.delete(url);\n  }\n\n  getToolboxItemById(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolboxItem/${id}`);\n  }\n\n  getToolboxItemByProjectId(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/toolbox/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService {\n\n    private baseUrl = 'http://localhost:3000/api/auth';\n\n    constructor(private http: HttpClient, private router: Router) {\n    }\n\n    registerUser(user: User) {\n        const registerURL = `${this.baseUrl}/register`;\n        return this.http.post(registerURL, user);\n    }\n\n    login(user: User) {\n        const loginURL = `${this.baseUrl}/login`;\n        this.getCurrentUser(user).subscribe(result => {\n            localStorage.setItem('user', JSON.stringify(result));\n            const userStoraged: User =  JSON.parse(localStorage.getItem('user'));\n            console.log('from local storedge', userStoraged);\n        })\n        localStorage.setItem('user', JSON.stringify(user));\n        return this.http.post(loginURL, user);\n    }\n\n    loggedIn() {\n        return !!localStorage.getItem('token');\n    }\n\n    getToken() {\n        return localStorage.getItem('token');\n    }\n\n    getCurrentUser(user: User) {\n        const registerURL = `${this.baseUrl}/currentUser`;\n        return this.http.post(registerURL, user);\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        this.router.navigateByUrl('');\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}